/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.paradigmatecnologico.binaryrpc.avro.service;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Search extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Search\",\"namespace\":\"com.paradigmatecnologico.binaryrpc.avro.service\",\"fields\":[{\"name\":\"field\",\"type\":[\"string\",\"null\"]},{\"name\":\"value\",\"type\":[\"string\",\"null\"]}]}");
  @Deprecated public java.lang.CharSequence field;
  @Deprecated public java.lang.CharSequence value;

  /**
   * Default constructor.
   */
  public Search() {}

  /**
   * All-args constructor.
   */
  public Search(java.lang.CharSequence field, java.lang.CharSequence value) {
    this.field = field;
    this.value = value;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return field;
    case 1: return value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: field = (java.lang.CharSequence)value$; break;
    case 1: value = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'field' field.
   */
  public java.lang.CharSequence getField() {
    return field;
  }

  /**
   * Sets the value of the 'field' field.
   * @param value the value to set.
   */
  public void setField(java.lang.CharSequence value) {
    this.field = value;
  }

  /**
   * Gets the value of the 'value' field.
   */
  public java.lang.CharSequence getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.CharSequence value) {
    this.value = value;
  }

  /** Creates a new Search RecordBuilder */
  public static com.paradigmatecnologico.binaryrpc.avro.service.Search.Builder newBuilder() {
    return new com.paradigmatecnologico.binaryrpc.avro.service.Search.Builder();
  }
  
  /** Creates a new Search RecordBuilder by copying an existing Builder */
  public static com.paradigmatecnologico.binaryrpc.avro.service.Search.Builder newBuilder(com.paradigmatecnologico.binaryrpc.avro.service.Search.Builder other) {
    return new com.paradigmatecnologico.binaryrpc.avro.service.Search.Builder(other);
  }
  
  /** Creates a new Search RecordBuilder by copying an existing Search instance */
  public static com.paradigmatecnologico.binaryrpc.avro.service.Search.Builder newBuilder(com.paradigmatecnologico.binaryrpc.avro.service.Search other) {
    return new com.paradigmatecnologico.binaryrpc.avro.service.Search.Builder(other);
  }
  
  /**
   * RecordBuilder for Search instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Search>
    implements org.apache.avro.data.RecordBuilder<Search> {

    private java.lang.CharSequence field;
    private java.lang.CharSequence value;

    /** Creates a new Builder */
    private Builder() {
      super(com.paradigmatecnologico.binaryrpc.avro.service.Search.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.paradigmatecnologico.binaryrpc.avro.service.Search.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Search instance */
    private Builder(com.paradigmatecnologico.binaryrpc.avro.service.Search other) {
            super(com.paradigmatecnologico.binaryrpc.avro.service.Search.SCHEMA$);
      if (isValidValue(fields()[0], other.field)) {
        this.field = data().deepCopy(fields()[0].schema(), other.field);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.value)) {
        this.value = data().deepCopy(fields()[1].schema(), other.value);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'field' field */
    public java.lang.CharSequence getField() {
      return field;
    }
    
    /** Sets the value of the 'field' field */
    public com.paradigmatecnologico.binaryrpc.avro.service.Search.Builder setField(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.field = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'field' field has been set */
    public boolean hasField() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'field' field */
    public com.paradigmatecnologico.binaryrpc.avro.service.Search.Builder clearField() {
      field = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'value' field */
    public java.lang.CharSequence getValue() {
      return value;
    }
    
    /** Sets the value of the 'value' field */
    public com.paradigmatecnologico.binaryrpc.avro.service.Search.Builder setValue(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.value = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'value' field has been set */
    public boolean hasValue() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'value' field */
    public com.paradigmatecnologico.binaryrpc.avro.service.Search.Builder clearValue() {
      value = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Search build() {
      try {
        Search record = new Search();
        record.field = fieldSetFlags()[0] ? this.field : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.value = fieldSetFlags()[1] ? this.value : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
