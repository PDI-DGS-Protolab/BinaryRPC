/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.paradigmatecnologico.binaryrpc.avro.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Data extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Data\",\"namespace\":\"com.paradigmatecnologico.binaryrpc.avro.model\",\"fields\":[{\"name\":\"ID\",\"type\":\"double\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"state\",\"type\":{\"type\":\"enum\",\"name\":\"State\",\"symbols\":[\"MARRIED\",\"SINGLE\",\"UNDEFINED\"],\"default\":\"UNDEFINED\"}},{\"name\":\"telephones\",\"type\":{\"type\":\"map\",\"values\":\"long\"}},{\"name\":\"addresses\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"member\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"description\",\"type\":[\"string\",\"null\"]}]}");
  @Deprecated public double ID;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public com.paradigmatecnologico.binaryrpc.avro.model.State state;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.Long> telephones;
  @Deprecated public java.util.List<java.lang.CharSequence> addresses;
  @Deprecated public java.lang.Boolean member;
  @Deprecated public java.lang.CharSequence description;

  /**
   * Default constructor.
   */
  public Data() {}

  /**
   * All-args constructor.
   */
  public Data(java.lang.Double ID, java.lang.CharSequence name, com.paradigmatecnologico.binaryrpc.avro.model.State state, java.util.Map<java.lang.CharSequence,java.lang.Long> telephones, java.util.List<java.lang.CharSequence> addresses, java.lang.Boolean member, java.lang.CharSequence description) {
    this.ID = ID;
    this.name = name;
    this.state = state;
    this.telephones = telephones;
    this.addresses = addresses;
    this.member = member;
    this.description = description;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ID;
    case 1: return name;
    case 2: return state;
    case 3: return telephones;
    case 4: return addresses;
    case 5: return member;
    case 6: return description;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ID = (java.lang.Double)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: state = (com.paradigmatecnologico.binaryrpc.avro.model.State)value$; break;
    case 3: telephones = (java.util.Map<java.lang.CharSequence,java.lang.Long>)value$; break;
    case 4: addresses = (java.util.List<java.lang.CharSequence>)value$; break;
    case 5: member = (java.lang.Boolean)value$; break;
    case 6: description = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ID' field.
   */
  public java.lang.Double getID() {
    return ID;
  }

  /**
   * Sets the value of the 'ID' field.
   * @param value the value to set.
   */
  public void setID(java.lang.Double value) {
    this.ID = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'state' field.
   */
  public com.paradigmatecnologico.binaryrpc.avro.model.State getState() {
    return state;
  }

  /**
   * Sets the value of the 'state' field.
   * @param value the value to set.
   */
  public void setState(com.paradigmatecnologico.binaryrpc.avro.model.State value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'telephones' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Long> getTelephones() {
    return telephones;
  }

  /**
   * Sets the value of the 'telephones' field.
   * @param value the value to set.
   */
  public void setTelephones(java.util.Map<java.lang.CharSequence,java.lang.Long> value) {
    this.telephones = value;
  }

  /**
   * Gets the value of the 'addresses' field.
   */
  public java.util.List<java.lang.CharSequence> getAddresses() {
    return addresses;
  }

  /**
   * Sets the value of the 'addresses' field.
   * @param value the value to set.
   */
  public void setAddresses(java.util.List<java.lang.CharSequence> value) {
    this.addresses = value;
  }

  /**
   * Gets the value of the 'member' field.
   */
  public java.lang.Boolean getMember() {
    return member;
  }

  /**
   * Sets the value of the 'member' field.
   * @param value the value to set.
   */
  public void setMember(java.lang.Boolean value) {
    this.member = value;
  }

  /**
   * Gets the value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /** Creates a new Data RecordBuilder */
  public static com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder newBuilder() {
    return new com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder();
  }
  
  /** Creates a new Data RecordBuilder by copying an existing Builder */
  public static com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder newBuilder(com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder other) {
    return new com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder(other);
  }
  
  /** Creates a new Data RecordBuilder by copying an existing Data instance */
  public static com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder newBuilder(com.paradigmatecnologico.binaryrpc.avro.model.Data other) {
    return new com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder(other);
  }
  
  /**
   * RecordBuilder for Data instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Data>
    implements org.apache.avro.data.RecordBuilder<Data> {

    private double ID;
    private java.lang.CharSequence name;
    private com.paradigmatecnologico.binaryrpc.avro.model.State state;
    private java.util.Map<java.lang.CharSequence,java.lang.Long> telephones;
    private java.util.List<java.lang.CharSequence> addresses;
    private java.lang.Boolean member;
    private java.lang.CharSequence description;

    /** Creates a new Builder */
    private Builder() {
      super(com.paradigmatecnologico.binaryrpc.avro.model.Data.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Data instance */
    private Builder(com.paradigmatecnologico.binaryrpc.avro.model.Data other) {
            super(com.paradigmatecnologico.binaryrpc.avro.model.Data.SCHEMA$);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.state)) {
        this.state = data().deepCopy(fields()[2].schema(), other.state);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.telephones)) {
        this.telephones = data().deepCopy(fields()[3].schema(), other.telephones);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.addresses)) {
        this.addresses = data().deepCopy(fields()[4].schema(), other.addresses);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.member)) {
        this.member = data().deepCopy(fields()[5].schema(), other.member);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.description)) {
        this.description = data().deepCopy(fields()[6].schema(), other.description);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'ID' field */
    public java.lang.Double getID() {
      return ID;
    }
    
    /** Sets the value of the 'ID' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder setID(double value) {
      validate(fields()[0], value);
      this.ID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'ID' field has been set */
    public boolean hasID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'ID' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder clearID() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'name' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'state' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.State getState() {
      return state;
    }
    
    /** Sets the value of the 'state' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder setState(com.paradigmatecnologico.binaryrpc.avro.model.State value) {
      validate(fields()[2], value);
      this.state = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'state' field has been set */
    public boolean hasState() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'state' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder clearState() {
      state = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'telephones' field */
    public java.util.Map<java.lang.CharSequence,java.lang.Long> getTelephones() {
      return telephones;
    }
    
    /** Sets the value of the 'telephones' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder setTelephones(java.util.Map<java.lang.CharSequence,java.lang.Long> value) {
      validate(fields()[3], value);
      this.telephones = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'telephones' field has been set */
    public boolean hasTelephones() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'telephones' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder clearTelephones() {
      telephones = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'addresses' field */
    public java.util.List<java.lang.CharSequence> getAddresses() {
      return addresses;
    }
    
    /** Sets the value of the 'addresses' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder setAddresses(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[4], value);
      this.addresses = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'addresses' field has been set */
    public boolean hasAddresses() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'addresses' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder clearAddresses() {
      addresses = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'member' field */
    public java.lang.Boolean getMember() {
      return member;
    }
    
    /** Sets the value of the 'member' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder setMember(java.lang.Boolean value) {
      validate(fields()[5], value);
      this.member = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'member' field has been set */
    public boolean hasMember() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'member' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder clearMember() {
      member = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.description = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'description' field */
    public com.paradigmatecnologico.binaryrpc.avro.model.Data.Builder clearDescription() {
      description = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public Data build() {
      try {
        Data record = new Data();
        record.ID = fieldSetFlags()[0] ? this.ID : (java.lang.Double) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.state = fieldSetFlags()[2] ? this.state : (com.paradigmatecnologico.binaryrpc.avro.model.State) defaultValue(fields()[2]);
        record.telephones = fieldSetFlags()[3] ? this.telephones : (java.util.Map<java.lang.CharSequence,java.lang.Long>) defaultValue(fields()[3]);
        record.addresses = fieldSetFlags()[4] ? this.addresses : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[4]);
        record.member = fieldSetFlags()[5] ? this.member : (java.lang.Boolean) defaultValue(fields()[5]);
        record.description = fieldSetFlags()[6] ? this.description : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
